# Remplacer tout les endroits où il y a des variables par vos informations
# Je n'utilise plus ce fichier, ce n'est pas impossible qu'il ne fonctionne pas en l'état, mais possède pas mal de choses que l'ont peut réutiliser
volumes:
  nextcloud:
  db:
  reverse-proxy:

services:
  emulatorjs:
    image: lscr.io/linuxserver/emulatorjs
    container_name: emulatorjs
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Paris
    - SUBFOLDER=/ #optional
    volumes:
    - /$PATH/emu/config:/config
    - /$PATH/emu/data:/data
    ports:
    - 3000:3000
    - 83:80
    - 4001:4001 #optional
    restart: unless-stopped
    labels:
    - "traefik.http.services.emu.loadbalancer.server.port=80"
    - "traefik.http.routers.emu.rule=Host(`$VOTRE_URL`)"
    - "traefik.http.routers.emu.service=emu"
    - "traefik.enable=true"
    - "traefik.http.services.emuconfig.loadbalancer.server.port=3000"
    - "traefik.http.routers.emuconfig.rule=Host(`$VOTRE_URL`)"
    - "traefik.http.routers.emuconfig.service=emuconfig"

  db:
    image: linuxserver/mariadb
    environment:
    - PUID=1000
    - PGID=1000
    - MYSQL_ROOT_PASSWORD=$PASSWORD
    - TZ=Europe/Paris
    - MYSQL_DATABASE=#optional
    - MYSQL_USER=#optional
    - MYSQL_PASSWORD=#optional
    volumes:
    - /$PATH/db:/var/lib/mysql
    restart: always
    labels:
    - traefik.enable=false

  adminer:
    image: adminer:4.6.3-standalone
    labels:
    - traefik.enable=true
    - traefik.http.routers.adminer.rule=Host(`$PATH`)
    - traefik.port=8079
    depends_on:
    - db

  wordpress:
    depends_on:
    - db
    image: wordpress:latest
    volumes:
    - /$PATH/wordpress/:/var/www/html
    ports:
    - "8000:80"
    restart: always
    environment:
    - WORDPRESS_DB_HOST=$HOST
    - WORDPRESS_DB_USER=$USER
    - WORDPRESS_DB_PASSWORD=$PASSWD
    - WORDPRESS_DB_NAME=$DBNAME
    labels:
    - "traefik.enable=true"
    - "traefik.http.services.wp.loadbalancer.server.port=80"
    - "traefik.http.routers.wp.rule=Host(`$VOTRE_URL`)"
    - "traefik.http.routers.wp.service=wp"

  transmission:
    image: lscr.io/linuxserver/transmission
    container_name: transmission
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Paris
    - TRANSMISSION_WEB_HOME=/combustion-release/ #optional
    - USER=$USER
    - PASS=$PASSWD
    volumes:
    - /$PATH/transmission/config/:/config
    - /$PATH/transmission/downloads:/downloads
    - /$PATH/transmission/watch:/watch
    ports:
    - 9091:9091
    - 51413:51413
    - 51413:51413/udp
    restart: unless-stopped
    labels:
    - "traefik.enable=true"
    - "traefik.http.services.torrent.loadbalancer.server.port=9091"
    - "traefik.http.routers.torrent.rule=Host(`$VOTRE_URL`)"
    - "traefik.http.routers.torrent.service=torrent"

  jackett:
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/London
    - AUTO_UPDATE=true
    volumes:
    - /$PATH/gilett/config:/config
    - /$PATH/gilett/downloads:/downloads
    ports:
    - 9117:9117
    restart: unless-stopped
    labels:
    - "traefik.enable=true"
    - "traefik.http.services.gilett.loadbalancer.server.port=9117"
    - "traefik.http.routers.gilett.rule=Host(`$VOTRE_URL`)"
    - "traefik.http.routers.gilett.service=gilett"

  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/London
    volumes:
    - /$PATH/sonarr/config:/config
    - /$PATH/sonarr/tvseries:/tv #optional
    - /$PATH/transmission/downloads/complete:/downloads/complete #optional
    ports:
      - 8989:8989
    restart: unless-stopped
    labels:
    - "traefik.enable=true"
    - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    - "traefik.http.routers.sonarr.rule=Host(`$VOTRE_URL`)"
    - "traefik.http.routers.sonarr.service=sonarr"

  app:
    image: nextcloud
    restart: always
    volumes:
    - /$PATH/nextcloud:/var/www/html
    environment:
    - TZ=Europe/Paris
    - MYSQL_PASSWORD=$PASSWD
    - MYSQL_DATABASE=$DB
    - MYSQL_USER=$USER
    - MYSQL_HOST=$HOST
    labels:
    - "traefik.enable=true"
    - "traefik.http.services.cloud.loadbalancer.server.port=80"
    - "traefik.http.routers.cloud.rule=Host(`$VOTRE_URL`)"
    - "traefik.http.routers.cloud.service=cloud"
    depends_on:
    - db
    
# je pense que le service plex est celui qui fonctionne le moins bien

  plex:
    image: lscr.io/linuxserver/plex
    container_name: plex
    environment:
    - ADVERTISE_IP=
    - PUID=1000
    - PGID=1000
    - VERSION=docker
    - PLEX_CLAIM=
    volumes:
    - $PATH/plex/library:/config
    - /$PATH/plex/tvseries:/tv
    - /$PATH/plex/movies:/movies
    - /$PATH/plex/animes:/animes
    restart: unless-stopped
    labels:
    - "traefik.enable=true"
    - "traefik.http.services.video.loadbalancer.server.port=32400"
    - "traefik.http.routers.video.rule=Host(`$VOTRE_URL`)"
    - "traefik.http.routers.video.service=video"

  reverse-proxy:
    restart: always
    image: traefik:v2.0
    ports:
    - "443:443"
    - "80:80"
    volumes:
    - /$PATH/services.toml:/etc/traefik/services.toml
    - /$PATH/traefik.toml:/etc/traefik/traefik.toml
    - /var/run/docker.sock:/var/run/docker.sock
    labels:
    - "traefik.http.routers.api.rule=Host(`$VOTRE_URL`)"
    - "traefik.http.routers.api.service=api@internal"
    - "traefik.http.routers.api.entrypoints=http"
    - "traefik.http.routers.api.middlewares=auth"
    - "traefik.http.middlewares.auth.basicauth.users=$ID:$PASSWD
    - "traefik.http.routers.$SERVICE.entrypoints=http"
    - "traefik.http.routers.$SERVICE.rule=Host(`$VOTRE_URL`)"
    - "traefik.http.routers.$SERVICE.service=$SERVICE@file"

  joal:
    image: anthonyraymond/joal:2.1.24-arm
    container_name: joal
    restart: unless-stopped
    depends_on:
    - reverse-proxy
    volumes:
    - $PATH/joal-conf:/data
    command: ["--joal-conf=/data", "--spring.main.web-environment=true", "--server.port=80", "--joal.ui.path.prefix=joal", "--joal.ui.secret-token=$SECRET"]
    labels:
    - "traefik.enable=true"
    - "traefik.http.services.ratio.loadbalancer.server.port=80"
    - "traefik.http.routers.ratio.rule=Host(`$VOTRE_URL`)"
    - "traefik.http.routers.ratio.service=ratio"

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    environment:
    - WEBPASSWORD=$PASSWD
    volumes:
    - /$PATH/pihole/etc-pihole:/etc/pihole
    - /$PATH/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    cap_add:
    - NET_ADMIN
    restart: unless-stopped
    labels:
    - "traefik.enable=true"
    - "traefik.http.services.pihole.loadbalancer.server.port=80"
    - "traefik.http.routers.pihole.rule=Host(`$VOTRE_URL`)"
    - "traefik.http.routers.pihole.service=pihole"

